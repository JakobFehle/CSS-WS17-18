{
    "collab_server" : "",
    "contents" : "source('loadTrecResults.R')\nrequire(tidyverse)\nrequire(stringr)\nrequire(dplyr)\nrequire(reshape)\nlibrary(gridExtra)\nlibrary(grid)\n\n# Laden der Trec_eval Ergebnisse\nexperiment_results<-loadTrecResults(\"cacm/result/trec_results\")\n\n# Saeuberung: whitespaces der measure Spalte entfernen\nexperiment_results$measure<-str_replace_all(experiment_results$measure, \n                                            pattern=\"[[:space:]]\",\n                                            replacement=\"\")\n\n#### Ergebnispräsentation\n# ----\n## MAP-Score\n\nmap_plot<-experiment_results%>%filter(measure=='map',queryID == 'all')\n\nggplot(data = map_plot, mapping = aes(y=value,x=coreTag,fill=coreTag))+\n  geom_bar(stat = \"identity\")+theme_bw(base_size = 16)+\n    ylab('MAP')+xlab('Core')\n\n\nmap_plot_full_c1<-experiment_results%>%filter(measure==\"map\", coreTag==\"Core_1\",queryID!=\"all\")\nmap_plot_full_c1$queryID<-as.numeric(as.character(map_plot_full_c1$queryID))\nmap_plot_full_c1<-map_plot_full_c1%>%mutate(queryID=factor(queryID))\nmap_plot_full_c2<-experiment_results%>%filter(measure==\"map\", coreTag==\"Core_2\",queryID!=\"all\")\nmap_plot_full_c2$queryID<-as.numeric(as.character(map_plot_full_c2$queryID))\nmap_plot_full_c2<-map_plot_full_c2%>%mutate(queryID=factor(queryID))\nmap_plot_full_c3<-experiment_results%>%filter(measure==\"map\", coreTag==\"Core_3\",queryID!=\"all\")\nmap_plot_full_c3$queryID<-as.numeric(as.character(map_plot_full_c3$queryID))\nmap_plot_full_c3<-map_plot_full_c3%>%mutate(queryID=factor(queryID))\n\n# MAP pro Kern pro Query\nggplot_map_c1<-ggplot(data=map_plot_full_c1, aes(x=queryID,y=value))+\n  geom_point(colour=\"#f8766d\")+\n    theme(panel.border = element_rect(linetype = \"solid\", fill = NA))+\n      ylab('MAP')+xlab('query')+\n        labs(title=\"MAP score per query - Core 1\")+\n          geom_smooth(aes(group = 1))+\n            theme(axis.text.x = element_blank())\n\nggplot_map_c2<-ggplot(data=map_plot_full_c2, aes(x=queryID,y=value))+\n  geom_point(colour=\"#00ba38\")+\n    theme(panel.border = element_rect(linetype = \"solid\", fill = NA))+\n      ylab('MAP')+xlab('query')+\n        labs(title=\"MAP score per query - Core 2\")+\n          geom_smooth(aes(group = 1))+\n            theme(axis.text.x = element_blank())\n\n\nggplot_map_c3<-ggplot(data=map_plot_full_c3, aes(x=queryID,y=value))+\n  geom_point(colour=\"#619cff\")+\n    theme(panel.border = element_rect(linetype = \"solid\", fill = NA))+\n      ylab('MAP')+xlab('query')+\n        labs(title=\"MAP score per query - Core 3\")+\n          geom_smooth(aes(group = 1))+\n            theme(axis.text.x = element_blank())\n\n  \ngrid.arrange(ggplot_map_c1,ggplot_map_c2,ggplot_map_c3)\n\n\n## MRR\n\nmrr_plot<-experiment_results%>%filter(measure=='recip_rank',queryID == 'all')\n\nggplot(data = mrr_plot, mapping = aes(y=value,x=coreTag,fill=coreTag))+\n  geom_bar(stat = \"identity\")+theme_bw(base_size = 16)+\n    ylab('MRR')+xlab('Core')\n\nmrr_plot_full<-experiment_results%>%filter(measure==\"recip_rank\",queryID!=\"all\")\nmrr_plot_full$queryID<-as.numeric(as.character(mrr_plot_full$queryID))\nmrr_plot_full<-mrr_plot_full%>%mutate(rank=1/mrr_plot_full$value)\n\nmrr_plot_full_c1<-experiment_results%>%filter(measure==\"recip_rank\",queryID!=\"all\",coreTag==\"Core_1\")\nmrr_plot_full_c1$queryID<-as.numeric(as.character(mrr_plot_full_c1$queryID))\nmrr_plot_full_c1<-mrr_plot_full_c1%>%mutate(rank=1/mrr_plot_full_c1$value)\nmrr_plot_full_c1<-mrr_plot_full_c1%>%mutate(queryID=factor(queryID))\n\nmrr_plot_full_c2<-experiment_results%>%filter(measure==\"recip_rank\",queryID!=\"all\",coreTag==\"Core_2\")\nmrr_plot_full_c2$queryID<-as.numeric(as.character(mrr_plot_full_c2$queryID))\nmrr_plot_full_c2<-mrr_plot_full_c2%>%mutate(rank=1/mrr_plot_full_c2$value)\nmrr_plot_full_c2<-mrr_plot_full_c2%>%mutate(queryID=factor(queryID))\n\nmrr_plot_full_c3<-experiment_results%>%filter(measure==\"recip_rank\",queryID!=\"all\",coreTag==\"Core_3\")\nmrr_plot_full_c3$queryID<-as.numeric(as.character(mrr_plot_full_c3$queryID))\nmrr_plot_full_c3<-mrr_plot_full_c3%>%mutate(rank=1/mrr_plot_full_c3$value)\nmrr_plot_full_c3<-mrr_plot_full_c3%>%mutate(queryID=factor(queryID))\n\n# MMR kombiniert pro Kern pro Query\nmrr_plot_full<-mrr_plot_full%>%mutate(queryID=factor(queryID))\nggplot(data = mrr_plot_full,mapping=aes(x=queryID,y=rank,color=coreTag, group=coreTag))+\n  scale_y_continuous(trans=\"reverse\", breaks = c(1,3,5,10,20,30,40,50,60))+\n  geom_point()+\n  scale_x_discrete()+\n  geom_line()+\n  theme(axis.text.x = element_blank())\n\n## MMR pro Kern pro Query\nmrr_plot_c1<-ggplot(data = mrr_plot_full_c1,mapping=aes(x=queryID,y=rank))+\n  scale_y_continuous(trans=\"reverse\", breaks = c(1,3,5,10,20,30,40,50,60))+\n  geom_point(colour=\"#f8766d\")+\n  scale_x_discrete()+\n  geom_line(group=1)+\n  theme(axis.text.x = element_blank())\n  \nmrr_plot_c2<-ggplot(data = mrr_plot_full_c2,mapping=aes(x=queryID,y=rank))+\n  scale_y_continuous(trans=\"reverse\", breaks = c(1,3,5,10,20,30,40,50))+\n  geom_point(colour=\"#00ba38\")+\n  scale_x_discrete()+\n  geom_line(group=1)+\n  theme(axis.text.x = element_blank())\n\nmrr_plot_c3<-ggplot(data = mrr_plot_full_c3,mapping=aes(x=queryID,y=rank))+\n  scale_y_continuous(trans=\"reverse\", breaks = c(1,3,5,10,20,30,40))+\n  geom_point(colour=\"#619cff\")+\n  scale_x_discrete()+\n  geom_line(group=1)+\n  theme(axis.text.x = element_blank())\n\ngrid.arrange(mrr_plot_c1,mrr_plot_c2,mrr_plot_c3)\n\n## R-Prec\n\nr_prec<-experiment_results%>%filter(measure=='R-prec',queryID == 'all')\n\nggplot(data = r_prec, mapping = aes(y=value,x=coreTag,fill=coreTag))+\n  geom_bar(stat = \"identity\")+theme_bw(base_size = 16)+\n  ylab('R-Prec')+xlab('Core')\n\n\n# Sinn? Wir wollen alle Dokumente -> Hoher Recall erreichen, also F-Measure bzw Precision dementsprechend niedrig\n## Recall\n\n# Filtern der benötigten Values\nrecall_plot<-experiment_results%>%filter(measure==\"num_rel\" | measure==\"num_rel_ret\" | measure==\"num_ret\", queryID == \"all\")\n\n# Aendern der Dataframe struktur zur Berechnung der anderen Werte\nrecall_plot<-recall_plot%>%spread(measure,value)\n\n# Berechnung Recall\nrecall_plot<-recall_plot%>%mutate(recall=num_rel_ret/num_rel)\n\n# Berechnung Precision\nrecall_plot<-recall_plot%>%mutate(prec=num_rel_ret/num_ret)\n\n# Berechnung Fmeasure\nrecall_plot<-recall_plot%>%mutate(f_measure=2*prec*recall/(prec+recall))\n\n# Plot Recall pro Kern über alle Queries\nggplot(data = recall_plot, mapping = aes(y=recall,x=coreTag,fill=coreTag))+\n  geom_bar(stat = \"identity\")+theme_bw(base_size = 16)+\n  ylab('Recall')+xlab('Core')\n\n## F-Measure\n\nggplot(data = recall_plot, mapping = aes(y=f_measure,x=coreTag,fill=coreTag))+\n  geom_bar(stat = \"identity\")+theme_bw(base_size = 16)+\n  ylab('F-Measure')+xlab('Core')\n\n## F-Measure über alle Dokumente\n\nrecall_plot_full_c1<-experiment_results%>%filter(measure==\"num_rel\" | measure==\"num_rel_ret\" | measure==\"num_ret\",coreTag==\"Core_1\", queryID != \"all\")\nrecall_plot_full_c1<-recall_plot_full_c1%>%spread(measure,value)\nrecall_plot_full_c1$queryID<-as.numeric(as.character(recall_plot_full_c1$queryID))\nrecall_plot_full_c1<-recall_plot_full_c1%>%mutate(recall=num_rel_ret/num_rel)\nrecall_plot_full_c1<-recall_plot_full_c1%>%mutate(prec=num_rel_ret/num_ret)\nrecall_plot_full_c1<-recall_plot_full_c1%>%mutate(f_measure=2*prec*recall/(prec+recall))\nrecall_plot_full_c1<-recall_plot_full_c1%>%mutate(queryID=factor(queryID))\nfmeasure_plot_c1<-ggplot(data=recall_plot_full_c1, aes(x=queryID,y=f_measure))+\n  scale_y_continuous(limits=c(0,1))+\n  geom_point(colour=\"#619cff\")+\n  theme(panel.border = element_rect(linetype = \"solid\", fill = NA))+\n  ylab('F-Measure')+xlab('Query')+\n  labs(title=\"F-Measure per query - Core 1\")+\n  geom_smooth(aes(group = 1))+\n  theme(axis.text.x = element_blank())\nrecall_plot_full_c2<-experiment_results%>%filter(measure==\"num_rel\" | measure==\"num_rel_ret\" | measure==\"num_ret\",coreTag==\"Core_2\", queryID != \"all\")\nrecall_plot_full_c2<-recall_plot_full_c2%>%spread(measure,value)\nrecall_plot_full_c2$queryID<-as.numeric(as.character(recall_plot_full_c2$queryID))\nrecall_plot_full_c2<-recall_plot_full_c2%>%mutate(recall=num_rel_ret/num_rel)\nrecall_plot_full_c2<-recall_plot_full_c2%>%mutate(prec=num_rel_ret/num_ret)\nrecall_plot_full_c2<-recall_plot_full_c2%>%mutate(f_measure=2*prec*recall/(prec+recall))\nrecall_plot_full_c2<-recall_plot_full_c2%>%mutate(queryID=factor(queryID))\nfmeasure_plot_c2<-ggplot(data=recall_plot_full_c2, aes(x=queryID,y=f_measure))+\n  scale_y_continuous(limits=c(0,1))+\n  geom_point(colour=\"#619cff\")+\n  theme(panel.border = element_rect(linetype = \"solid\", fill = NA))+\n  ylab('F-Measure')+xlab('Query')+\n  labs(title=\"F-Measure per query - Core 2\")+\n  geom_smooth(aes(group = 1))+\n  theme(axis.text.x = element_blank())\nrecall_plot_full_c3<-experiment_results%>%filter(measure==\"num_rel\" | measure==\"num_rel_ret\" | measure==\"num_ret\",coreTag==\"Core_3\", queryID != \"all\")\nrecall_plot_full_c3<-recall_plot_full_c3%>%spread(measure,value)\nrecall_plot_full_c3$queryID<-as.numeric(as.character(recall_plot_full_c3$queryID))\nrecall_plot_full_c3<-recall_plot_full_c3%>%mutate(recall=num_rel_ret/num_rel)\nrecall_plot_full_c3<-recall_plot_full_c3%>%mutate(prec=num_rel_ret/num_ret)\nrecall_plot_full_c3<-recall_plot_full_c3%>%mutate(f_measure=2*prec*recall/(prec+recall))\nrecall_plot_full_c3<-recall_plot_full_c3%>%mutate(queryID=factor(queryID))\nfmeasure_plot_c3<-ggplot(data=recall_plot_full_c3, aes(x=queryID,y=f_measure))+\n  scale_y_continuous(limits=c(0,1))+\n  geom_point(colour=\"#619cff\")+\n  theme(panel.border = element_rect(linetype = \"solid\", fill = NA))+\n  ylab('F-Measure')+xlab('Query')+\n  labs(title=\"F-Measure per query - Core 3\")+\n  geom_smooth(aes(group = 1))+\n  theme(axis.text.x = element_blank())\n\ngrid.arrange(fmeasure_plot_c1,fmeasure_plot_c2,fmeasure_plot_c3)\n\n## Precision over Number of Docs\n# Filter P@K Measures per Core\nprec_of_docs_retrieved<-experiment_results%>%filter(grepl('[P]{1}', measure), queryID==\"all\")\n\nprec_of_docs_retrieved$measure2<-prec_of_docs_retrieved$measure\n\nprec_of_docs_retrieved<-prec_of_docs_retrieved%>%separate(col = measure2, into = c(\"deleteable\", \"docs_retrieved\"), sep = \"P\")\n\nprec_of_docs_retrieved$deleteable<-NULL\n\nprec_of_docs_retrieved$docs_retrieved<-as.numeric(as.character(prec_of_docs_retrieved$docs_retrieved))\n\nggplot(data=prec_of_docs_retrieved,mapping=aes(x=docs_retrieved,y=value,color=coreTag))+\n  geom_line()+\n    ylab('Precision')+xlab('Docs retrieved')\n    \n## 11pt interpolated averige precision Graph\n\navg_precision_11pt<-experiment_results%>%\n                        filter(str_detect(measure, pattern=\"ircl\"), queryID==\"all\")\n\navg_precision_11pt$recall_values<-rep(seq(from=0,to =1, by=0.1),3)\n\nggplot(data=avg_precision_11pt,mapping=aes(x=recall_values,y=value,color=coreTag))+\n  geom_line()\n\n\n## Topic-by-Topic Vergleich bei P@5\n\np5_results<-experiment_results%>%filter(measure==\"P5\", queryID != \"all\")\n\np5_results<-p5_results%>%arrange(coreTag, value)\n\nx_axis<-p5_results%>%filter(coreTag==\"Core_2\")%>%select(queryID)\n\nggplot(data = p5_results,mapping=aes(x=queryID,y=value,color=coreTag, group=coreTag))+\n  geom_point()+\n    scale_x_discrete(limits=x_axis$queryID)+\n      geom_line()+\n        theme(axis.text.x = element_blank())\n\n\n# T Test\n\nexperiment_results_wide<-spread(experiment_results,coreTag,value)\n\nresults_p10_ttest<-experiment_results_wide%>%filter(queryID != \"all\", measure == \"P100\")\n\nt.test(results_p10_ttest$Core_3, results_p10_ttest$Core_1,alternative=\"greater\", conf.level=0.95)\n\n",
    "created" : 1512421342413.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1715062674",
    "id" : "26C963DF",
    "lastKnownWriteTime" : 1506785868,
    "last_content_update" : 1506785868,
    "path" : "J:/R/plots_and_graphs.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}