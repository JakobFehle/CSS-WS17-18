{
    "collab_server" : "",
    "contents" : "require(tidyverse)\nrequire(dplyr)\nrequire(plyr)\nlibrary(readr)\nlibrary(SentimentAnalysis)\nlibrary(SnowballC)\nlibrary(tm)\nlibrary(spikeslab)\nsource(\"r scripts/cleanTweetText.R\")\n\n## Auswertung\n\n# Einlesen\n\ntwitter_data_sentiment<-read_delim(\"twitter data/SentimentAnalyse#1.csv\",\";\"\n                                   ,escape_double = FALSE, trim_ws =TRUE, \n                                   locale = locale())\n\ntwitter_data_sentiment_david_snd<-read_delim(\"data/SentimentAnalyseDavidzweiterDurchlauf.csv\",\";\"\n                                           ,escape_double = FALSE, trim_ws =TRUE, \n                                           locale = locale())\n\ntwitter_data_sentiment_jakob_snd<-read_delim(\"twitter data/SentimentAnalyse#2.csv\", \n                                         \";\", escape_double = FALSE, trim_ws = TRUE, \n                                         locale = locale())\n\n\ncolnames(twitter_data_sentiment_david_snd)<-c(\"sentimentScore\",\"text\")\ntwitter_data_sentiment<-twitter_data_sentiment%>%select(-c(ID))\ntwitter_data_sentiment_jakob_snd<-twitter_data_sentiment_jakob_snd%>%select(-c(X1,ID,positveSentimentScore,negativeSentimentScore))\ntwitter_data_sentiment_jakob_snd<-twitter_data_sentiment_jakob_snd%>%filter(sentimentScore != \"NA\")\ntwitter_data_sentiment_jakob_snd$isMatch<-\"1\"\ntwitter_data_sentiment_david_snd$isMatch<-\"1\"\n\n#temp Plot fÃ¼r Paper\nvalues <-c(nrow(twitter_data_sentiment%>%filter(isMatch==\"1\")), nrow(twitter_data_sentiment%>%filter(isMatch==\"0.5\")), nrow(twitter_data_sentiment\n                                                                                                                           %>%filter(isMatch==\"0\")))\nvalues\ngo <-c(\"matched\",\"polarity matched\",\"not matched\")\nbasic_plot_data<-data.frame(go,values)\nbasic_plot <- ggplot(basic_plot_data, aes(y = values,x =go))\nbasic_plot +geom_bar(stat = \"identity\", fill='#890E1C') + labs(x = \"\", y=\"count of tweets\")\n\n\n\ntwitter_data_sentiment<-rbind(twitter_data_sentiment,twitter_data_sentiment_jakob_snd,twitter_data_sentiment_david_snd)\n\ntwitter_data_sentiment<-twitter_data_sentiment%>%mutate(text=cleanTweetText(text))\n\n# Umwandeln der Scores in numeric mit \".\"\ntwitter_data_sentiment<-twitter_data_sentiment%>%filter(sentimentScore != \"NA\")\ntwitter_data_sentiment<-twitter_data_sentiment%>%filter(text != \"\")\ntwitter_data_sentiment<-twitter_data_sentiment%>%mutate(sentimentScore = sub(\",\", \".\", sentimentScore, fixed = TRUE))\ntwitter_data_sentiment$sentimentScore<-as.numeric(as.character(twitter_data_sentiment$sentimentScore))\n\n# Stemming\ntwitter_data_sentiment$text<-apply(twitter_data_sentiment[,\"text\"],1,function(x) stemTweetText(x))\n\n# Nur Matches der Kreuzvalid.\ntwitter_data_sentiment_match<-twitter_data_sentiment%>%filter(isMatch ==\"1\")\n\n\n\n##########\n## 5 Level\n##########\n\ntwitter_data_sentiment_5lvl<-twitter_data_sentiment_match\ntwitter_data_sentiment_5lvl<-twitter_data_sentiment_5lvl%>%select(\"sentimentScore\", \"text\")\n\nwrite.csv(twitter_data_sentiment_5lvl, \"data/SentimentAnalyse_5LevelDict.csv\")\n\nresponse5<-twitter_data_sentiment_5lvl$sentimentScore\nx5<-transformIntoCorpus(twitter_data_sentiment_5lvl$text)\nxDTM5<-toDocumentTermMatrix(x5, language = \"german\", minWordLength = 3,\n                          sparsity = NULL, removeStopwords = TRUE, stemming = FALSE)\n\n#997\ndict_lasso5<-generateDictionary(xDTM5,response5,modelType = \"lasso\", sparsity = 0.99999999, language = \"german\")\n\ndict_lm5<-generateDictionary(xDTM5,response5,modelType = \"lm\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n#1333\ndict_enet5<-generateDictionary(xDTM5,response5,modelType = \"enet\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\nsummary(dict_enet52)\n\n#6070\ndict_ridge5<-generateDictionary(xDTM5,response5,modelType = \"ridge\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n\n\n\nsummary(dict_lasso5)\ndict_lasso5\nplot(dict_lasso5)\n\nsummary(dict_lm5)\n#dict_lm5\nplot(dict_lm5)\n\nsummary(dict_enet5)\n#dict_enet5\nplot(dict_enet5)\n\nsummary(dict_ridge5)\n#dict_ridge5\nplot(dict_ridge5)\n\nwrite(dict_lasso5, \"dictionarys/lasso-5level.dict\")\nwrite(dict_lm5, \"dictionarys/lm-5level.dict\")\nwrite(dict_enet5, \"dictionarys/enet-5level.dict\")\nwrite(dict_ridge5, \"dictionarys/ridge-5level.dict\")\n\n\n###########\n## 3 Level\n###########\n\ntwitter_data_sentiment_3lvl<-twitter_data_sentiment_match%>%mutate(sentimentScore = sub(\"0.5\",\"1.0\", sentimentScore, fixed = TRUE))\ntwitter_data_sentiment_3lvl<-twitter_data_sentiment_3lvl%>%select(\"sentimentScore\", \"text\")\ntwitter_data_sentiment_3lvl$sentimentScore<-as.numeric(as.character(twitter_data_sentiment_3lvl$sentimentScore))\n\nwrite.csv(twitter_data_sentiment_3lvl, \"data/SentimentAnalyse_3LevelDict\")\n\nx3<-transformIntoCorpus(twitter_data_sentiment_3lvl$text)\nxDTM3<-toDocumentTermMatrix(x3, language = \"german\", minWordLength = 3,\n                            sparsity = NULL, removeStopwords = TRUE, stemming = FALSE)\nresponse3<-twitter_data_sentiment_3lvl$sentimentScore\n\n#1316\ndict_lasso3<-generateDictionary(xDTM3,response3,modelType = \"lasso\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\ndict_lm3<-generateDictionary(xDTM3,response3,modelType = \"lm\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n#1547\ndict_enet3<-generateDictionary(xDTM3,response3,modelType = \"enet\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n#6070\ndict_ridge3<-generateDictionary(xDTM3,response3,modelType = \"ridge\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n\nsummary(dict_lasso3)\ndict_lasso3\nplot(dict_lasso3)\n\nsummary(dict_lm3)\ndict_lm3\nplot(dict_lm3)\n\nsummary(dict_enet35)\ndict_enet3\nplot(dict_enet3)\n\nsummary(dict_ridge3)\ndict_ridge3\nplot(dict_ridge3)\n\nwrite(dict_lasso3, \"dictionarys/lasso-3level.dict\")\nwrite(dict_lm3, \"dictionarys/lm-3level.dict\")\nwrite(dict_enet35, \"dictionarys/enet-3level.dict\")\nwrite(dict_ridge3, \"dictionarys/ridge-3level.dict\")\n\n\n\n\n###########\n## 2 Level\n###########\n\ntwitter_data_sentiment_2lvl<-twitter_data_sentiment_match%>%mutate(sentimentScore = sub(\"0.5\",\"1\", sentimentScore, fixed = TRUE))\ntwitter_data_sentiment_2lvl<-twitter_data_sentiment_2lvl%>%filter(sentimentScore != 0)\ntwitter_data_sentiment_2lvl<-twitter_data_sentiment_2lvl%>%select(\"sentimentScore\", \"text\")\ntwitter_data_sentiment_2lvl$sentimentScore<-as.numeric(as.character(twitter_data_sentiment_2lvl$sentimentScore))\n\nwrite.csv(twitter_data_sentiment_2lvl, \"data/SentimentAnalyse_2LevelDict\")\n\nx2<-transformIntoCorpus(twitter_data_sentiment_2lvl$text)\nxDTM2<-toDocumentTermMatrix(x2, language = \"german\", minWordLength = 3,\n                            sparsity = NULL, removeStopwords = TRUE, stemming = FALSE)\nresponse2<-twitter_data_sentiment_2lvl$sentimentScore\n\n#883\ndict_lasso2<-generateDictionary(xDTM2,response2,modelType = \"lasso\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\ndict_lm2<-generateDictionary(xDTM2,response2,modelType = \"lm\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n#1403\ndict_enet2<-generateDictionary(xDTM2,response2,modelType = \"enet\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n\ndict_ridge2<-generateDictionary(xDTM2,response2,modelType = \"ridge\", filterTerms = NULL, control = list(), sparsity = 0.99999999, language = \"german\")\n\n\n\nsummary(dict_lasso2)\ndict_lasso2\nplot(dict_lasso2)\n\nsummary(dict_lm2)\ndict_lm2\nplot(dict_lm2)\n\nsummary(dict_enet2)\ndict_enet2\nplot(dict_enet2)\n\nsummary(dict_ridge2)\ndict_ridge2\nplot(dict_ridge2)\n\nwrite(dict_lasso2, \"dictionarys/lasso-2level.dict\")\nwrite(dict_lm2, \"dictionarys/lm-2level.dict\")\nwrite(dict_enet2, \"dictionarys/enet-2level.dict\")\nwrite(dict_ridge2, \"dictionarys/ridge-2level.dict\")\n\n\n\n### Experimente\n#only selecting the text column for sentiment analyses\ntwitter_data_for_sentiment<-twitter_data%>%select(\"text\")\n\ntwitter_data_for_sentiment<-twitter_data_for_sentiment[1:30000,]\n\nsentiment <-predict(dict_level3,twitter_data_for_sentiment$text)\n\ntwitter_data_for_sentiment<-twitter_data_for_sentiment%>%mutate(sentimentScore=NA)\n\ntwitter_data_for_sentiment$sentimentScore<-sentiment\n\n\n\nplotSentiment(sentiment)\nhist(as.numeric(unlist(sentiment)))\ndict_level3\n#Erstellen des Dict auf Level 5 Baseline\nx_level5<-transformIntoCorpus(baseline_dict_level5$text)\nresponse_level5<-as.numeric(as.character(baseline_dict_level5$sentimentScore))\n\ndict_level5<-generateDictionary(x_level5,response_level5,modelType = \"lasso\", filterTerms = NULL, control = list(),\n                                minWordLength = 3, sparsity = 0.99999999, weighting= function(x)\n                                  tm::weightTfIdf(x, normalize = TRUE))\n\n\ncompareDictionaries(dict_level3,dict_level5)                    \n",
    "created" : 1514471429981.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4270139954",
    "id" : "A7DC04F9",
    "lastKnownWriteTime" : 1514486877,
    "last_content_update" : 1514486877405,
    "path" : "D:/GitHub/CSS-WS17-18/r scripts/sentimentSample.R",
    "project_path" : "r scripts/sentimentSample.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}