{
    "collab_server" : "",
    "contents" : "require(tidyverse)\nrequire(dplyr)\nrequire(ggplot2)\nlibrary(plotly)\nlibrary(readr)\nlibrary(SentimentAnalysis)\n\nlasso_5lvl<-read(\"dictionarys/lasso-5level.dict\")\nlasso_3lvl<-read(\"dictionarys/lasso-3level.dict\")\nlasso_2lvl<-read(\"dictionarys/lasso-2level.dict\")\n\nridge_5lvl<-read(\"dictionarys/ridge-5level.dict\")\nridge_3lvl<-read(\"dictionarys/ridge-3level.dict\")\nridge_2lvl<-read(\"dictionarys/ridge-2level.dict\")\n\nenet_5lvl<-read(\"dictionarys/enet-5level.dict\")\nenet_3lvl<-read(\"dictionarys/enet-3level.dict\")\nenet_2lvl<-read(\"dictionarys/enet-2level.dict\")\n\nsentiWS<-read(\"dictionarys/sentiWSDict.dict\")\n\n# Dataset is too big -> split\ntwitter_data1<-twitter_data[1:120000,]\ntwitter_data2<-twitter_data[120001:253977,]\ntwitter_data_cleaned1<-twitter_data_cleaned[1:120000,]\ntwitter_data_cleaned2<-twitter_data_cleaned[120001:253977,]\n\npred_ridge51<-predict(ridge_5lvl,twitter_data_cleaned1$text)\ntwitter_data1$ridge5<-as.numeric(unlist(pred_ridge51))\npred_ridge52<-predict(ridge_5lvl,twitter_data_cleaned2$text)\ntwitter_data2$ridge5<-as.numeric(unlist(pred_ridge52))\n\npred_ridge31<-predict(ridge_3lvl,twitter_data_cleaned1$text)\ntwitter_data1$ridge3<-as.numeric(unlist(pred_ridge31))\npred_ridge32<-predict(ridge_3lvl,twitter_data_cleaned2$text)\ntwitter_data2$ridge3<-as.numeric(unlist(pred_ridge32))\n\ntwitter_data1$ridge2<-as.numeric(unlist(predict(ridge_2lvl,twitter_data_cleaned1$text)))\ntwitter_data2$ridge2<-as.numeric(unlist(predict(ridge_2lvl,twitter_data_cleaned2$text)))\n\ntwitter_data1$enet5<-as.numeric(unlist(predict(enet_5lvl,twitter_data_cleaned1$text)))\ntwitter_data2$enet5<-as.numeric(unlist(predict(enet_5lvl,twitter_data_cleaned2$text)))\n\npred_enet31<-predict(enet_3lvl,twitter_data_cleaned1$text)\ntwitter_data1$enet3<-as.numeric(unlist(pred_enet31))\npred_enet32<-predict(enet_3lvl,twitter_data_cleaned2$text)\ntwitter_data2$enet3<-as.numeric(unlist(pred_enet32))\n\ntwitter_data1$enet2<-as.numeric(unlist(predict(enet_2lvl,twitter_data_cleaned1$text)))\ntwitter_data2$enet2<-as.numeric(unlist(predict(enet_2lvl,twitter_data_cleaned2$text)))\n\ntwitter_data1$lasso5<-as.numeric(unlist(predict(lasso_5lvl,twitter_data_cleaned1$text)))\ntwitter_data2$lasso5<-as.numeric(unlist(predict(lasso_5lvl,twitter_data_cleaned2$text)))\n\npred_lasso31<-predict(lasso_3lvl,twitter_data_cleaned1$text)\ntwitter_data1$lasso3<-as.numeric(unlist(pred_lasso31))\npred_lasso32<-predict(lasso_3lvl,twitter_data_cleaned2$text)\ntwitter_data2$lasso3<-as.numeric(unlist(pred_lasso32))\n\ntwitter_data1$lasso2<-as.numeric(unlist(predict(lasso_2lvl,twitter_data_cleaned1$text)))\ntwitter_data2$lasso2<-as.numeric(unlist(predict(lasso_2lvl,twitter_data_cleaned2$text)))\n\npred_sentiWS1<-predict(sentiWS,twitter_data_cleaned1$text)\ntwitter_data1$sentiWS<-as.numeric(unlist(pred_sentiWS1))\npred_sentiWS2<-predict(sentiWS,twitter_data_cleaned2$text)\ntwitter_data2$sentiWS<-as.numeric(unlist(pred_sentiWS2))\n\n\ntwitter_data_WS<-rbind(twitter_data1,twitter_data2)\ntwitter_data_WS<-twitter_data_WS%>%select(-c(ridge5,inReplyToUser,lang,retweetCount,ID,favouriteCount,hashtagCount,mentionCount, inReplyToStatus,isSourceTweet,userID,createdAT,insertedAT,charCount,tokenCount,urlCount))\n#twitter_data_WS<-twitter_data_WS%>%mutate(lasso5=round(lasso5, 3))\ntwitter_data_WS<-twitter_data_WS%>%mutate(lasso3=round(lasso3, 3))\n#twitter_data_WS<-twitter_data_WS%>%mutate(lasso2=round(lasso2, 3))\n#twitter_data_WS<-twitter_data_WS%>%mutate(ridge5=round(ridge5, 3))\ntwitter_data_WS<-twitter_data_WS%>%mutate(ridge3=round(ridge3, 3))\n#twitter_data_WS<-twitter_data_WS%>%mutate(ridge2=round(ridge2, 3))\n#twitter_data_WS<-twitter_data_WS%>%mutate(enet5=round(enet5, 3))\ntwitter_data_WS<-twitter_data_WS%>%mutate(enet3=round(enet3, 3))\n#twitter_data_WS<-twitter_data_WS%>%mutate(enet2=round(enet2, 3))\ntwitter_data_WS<-twitter_data_WS%>%mutate(sentiWS=round(sentiWS, 3))\n\ntwitter_data_WS<-twitter_data_WS%>%mutate(sentiStrength=as.numeric(positveSentimentScore)+as.numeric(negativeSentimentScore))\ntwitter_data_WS<-twitter_data_WS%>%select(-c(positveSentimentScore,negativeSentimentScore))\n\nwrite.table(twitter_data_WS, \"twitter data/twitterDataWithSentiment3Level.csv\", sep=\",\",col.names = TRUE, row.names = FALSE)\n\nnrow(twitter_data_WS%>%filter(lasso3==0))/nrow(twitter_data_WS)\nnrow(twitter_data_WS%>%filter(ridge3==0))/nrow(twitter_data_WS)\nnrow(twitter_data_WS%>%filter(enet3==0))/nrow(twitter_data_WS)\nnrow(twitter_data_WS%>%filter(sentiWS==0))/nrow(twitter_data_WS)\nnrow(twitter_data_WS%>%filter(sentiStrenth==0))/nrow(twitter_data_WS)\n\npred_lasso3<-rbind(pred_lasso31,pred_lasso32)\npred_ridge3<-rbind(pred_ridge31,pred_ridge32)\npred_enet3<-rbind(pred_enet31,pred_enet32)\npred_sentiWS<-rbind(pred_sentiWS1,pred_sentiWS2)\n\nDictCorrelation<-unlist(compareToResponse(pred_lasso3,twitter_data_WS$ridge3))\nDictCorrelation<-as.data.frame(as.table(DictCorrelation))\nDictCorrelation<-DictCorrelation%>%select(-c(Var2))\ncolnames(DictCorrelation)<-c(\"Vars\",\"LassoRidge\")\nDictCorrelation$LassoEnet<-unlist(compareToResponse(pred_lasso3,twitter_data_WS$enet3))\nDictCorrelation$LassoSentiWS<-unlist(compareToResponse(pred_lasso3,twitter_data_WS$sentiWS))\nDictCorrelation$LassoSentiStrenth<-unlist(compareToResponse(pred_lasso3,twitter_data_WS$sentiStrength))\n\nDictCorrelation$RidgeEnet<-unlist(compareToResponse(pred_ridge3,twitter_data_WS$enet3))\nDictCorrelation$RidgeSentiWS<-unlist(compareToResponse(pred_ridge3,twitter_data_WS$sentiWS))\nDictCorrelation$RidgeSentiStrenth<-unlist(compareToResponse(pred_ridge3,twitter_data_WS$sentiStrength))\n\nDictCorrelation$EnetSentiWS<-unlist(compareToResponse(pred_enet3,twitter_data_WS$sentiWS))\nDictCorrelation$EnetSentiStrenth<-unlist(compareToResponse(pred_enet3,twitter_data_WS$sentiStrength))\n\nDictCorrelation$SentiWSSentiStrength<-unlist(compareToResponse(pred_sentiWS,twitter_data_WS$sentiStrength))\n\nwrite.table(DictCorrelation, \"twitter data/dictCorrelation.csv\",sep=\",\",col.names = TRUE, row.names = FALSE)\n\nplotSentimentResponse(pred_lasso3,twitter_data_WS$enet3)\nhist(twitter_data_WS$enet3,breaks = c(seq(-4,4,0.1)))\nhist(twitter_data_WS$ridge3,breaks = c(seq(-4,4,0.1)))\nhist(twitter_data_WS$lasso3,breaks = c(seq(-4,4,0.1)))\nhist(twitter_data_WS$sentiStrenth,breaks = c(seq(-4,4,0.1)))\nhist(twitter_data_sentiment_match$sentimentScore, breaks = c(seq(-1,1,0.5)))\n\n##\ngg_b <- ggplot_build(\n  ggplot() + geom_histogram(aes(x = twitter_data_WS$ridge3), binwidth=.1)\n)\n\nbin <- dim(gg_b$data[[1]])[1]\ncols<-c(\"red\",\"green\")\ncolGradient <- colorRampPalette(cols)\ncut.cols <- colGradient(bin)\ncuts <- cut(twitter_data_WS$ridge3,bin)\nnames(cuts) <- sapply(cuts,function(t) cut.cols[which(as.character(t) == levels(cuts))])\n\nggplot(twitter_data_WS,aes(ridge3,fill=cut(ridge3,bin)))+\n  geom_histogram(show.legend=FALSE,bins=bin)+\n    scale_color_manual(values=cut.cols,labels=levels(cuts))+\n      scale_fill_manual(values=cut.cols,labels=levels(cuts))\n\n##\ngg_b <- ggplot_build(\n  ggplot() + geom_histogram(aes(x = twitter_data_sentiment_match$sentimentScore), binwidth=.5)\n)\n\nbin <- dim(gg_b$data[[1]])[1]\ncols<-c(\"red\",\"green\")\ncolGradient <- colorRampPalette(cols)\ncut.cols <- colGradient(bin)\ncuts <- cut(twitter_data_sentiment_match$sentimentScore,bin)\nnames(cuts) <- sapply(cuts,function(t) cut.cols[which(as.character(t) == levels(cuts))])\n\nggplot(twitter_data_sentiment_match,aes(sentimentScore,fill=cut(sentimentScore,bin)))+\n  geom_histogram(show.legend=FALSE,bins=bin)+\n  scale_color_manual(values=cut.cols,labels=levels(cuts))+\n  scale_fill_manual(values=cut.cols,labels=levels(cuts))+\n  labs(y=\"Anzahl\",x=\"Sentiment\")\n\ntwitter_data_WS2<-aggregate(twitter_data_WS[, 7:11],list(twitter_data_WS$weeksTillElection),mean)\ntwitter_data_WS3<-aggregate(twitter_data_WS[, 7:11],list(twitter_data_WS$party),mean)\n\nggplot(twitter_data_WS3, aes(x=Group.1,y=ridge3))+\n  geom_bar(aes(fill=ridge3),stat=\"identity\",show.legend=FALSE)+\n  scale_fill_gradient2(low=\"red\",high=\"green\",mid=\"yellow\")+\n  labs(y=\"Sentiment\",x=\"Partei\")\n\ntotalTweets<-nrow(twitter_data_WS)\nvalues=c(\"numPositiveTweets\",\"numNegativeTweets\",\"numNeutral/Undefined\")  \ntwitterAbdeckung<-data.frame(values)\n(nrow(twitter_data_WS%>%filter(lasso3 <0)))\n\ntwitterAbdeckung$lasso<-c((nrow(twitter_data_WS%>%filter(lasso3 > 0))),(nrow(twitter_data_WS%>%filter(lasso3 < 0))),(nrow(twitter_data_WS%>%filter(lasso3 ==0))))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(lassoP=c(lasso/totalTweets*100))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(lassoP=round(lassoP,2))\n\ntwitterAbdeckung$ridge<-c((nrow(twitter_data_WS%>%filter(ridge3 > 0))),(nrow(twitter_data_WS%>%filter(ridge3 < 0))),(nrow(twitter_data_WS%>%filter(ridge3 ==0))))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(ridgeP=c(ridge/totalTweets*100))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(ridgeP=round(ridgeP,2))\n\ntwitterAbdeckung$enet<-c((nrow(twitter_data_WS%>%filter(enet3 > 0))),(nrow(twitter_data_WS%>%filter(enet3 < 0))),(nrow(twitter_data_WS%>%filter(enet3 ==0))))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(enetP=c(enet/totalTweets*100))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(enetP=round(enetP,2))\n\ntwitterAbdeckung$sentiWS<-c((nrow(twitter_data_WS%>%filter(sentiWS > 0))),(nrow(twitter_data_WS%>%filter(sentiWS < 0))),(nrow(twitter_data_WS%>%filter(sentiWS ==0))))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(sentiWSP=c(sentiWS/totalTweets*100))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(sentiWSP=round(sentiWSP,2))\n\ntwitterAbdeckung$sentiStrength<-c((nrow(twitter_data_WS%>%filter(sentiStrength > 0))),(nrow(twitter_data_WS%>%filter(sentiStrength < 0))),(nrow(twitter_data_WS%>%filter(sentiStrength ==0))))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(sentiStrengthP=c(sentiStrength/totalTweets*100))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(sentiStrengthP=round(sentiStrengthP,2))\n\ntwitterAbdeckung<-twitterAbdeckung%>%select(-c(lassoP,ridgeP,enetP,sentiWSP,sentiStrengthP))\n\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(ridge=as.numeric(ridge))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(lasso=as.numeric(lasso))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(enet=as.numeric(enet))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(sentiWS=as.numeric(sentiWS))\ntwitterAbdeckung<-twitterAbdeckung%>%mutate(sentiStrength=as.numeric(ridge))\n\ntwitterAbdeckung2 <- twitterAbdeckung[,-1]\nrownames(twitterAbdeckung2) <- twitterAbdeckung[,1]\ntwitterAbdeckung<-twitterAbdeckung2\n\n\n\ntwitterAbdeckungTransform<-data.frame(t(twitterAbdeckung))\n\n\nplot_ly(twitterAbdeckungTransform, x = rownames(twitterAbdeckungTransform), y = ~numPositiveTweets, type = 'bar', name = 'positive Tweets') %>%\n  add_trace(y = ~numNegativeTweets, name = 'negative Tweets') %>%\n  layout(yaxis = list(range=c(0,200000), title = \"Anzahl Tweets\"), barmode = 'group')\n\n",
    "created" : 1514399245300.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "902604310",
    "id" : "AACF4A59",
    "lastKnownWriteTime" : 1514519010,
    "last_content_update" : 1514519010263,
    "path" : "D:/GitHub/CSS-WS17-18/r scripts/predictSentiment.R",
    "project_path" : "r scripts/predictSentiment.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}